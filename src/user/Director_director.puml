@startuml

!theme plain
top to bottom direction
skinparam linetype ortho

class AbstractDataReader {
  + AbstractDataReader():
  # readAssignedRequirementsFromFile(String): void
  # readTeachingRequirementsFromFile(String): void
  # readTeachersFromFile(String): void
}
class Approval {
  + Approval(int, String, LocalDateTime, String):
  - approvalTime: LocalDateTime
  - approver: String
  - ID: int
  - comments: String
  + toString(): String
  + isApproved(): int
   approvalTime: LocalDateTime
   rID: int
   comments: String
   ID: int
   approver: String
   approved: int
}
class AssignedRequirement {
  + AssignedRequirement():
  - directorName: String
  - className: String
  - TId: int
  - requestId: int
  + toString(): String
   TName: String
   directorName: String
   className: String
   requestId: int
   TId: int
}
class BasicCommands {
  + BasicCommands():
  + writeTeacherToTxtFile(List<Teacher>, String): void
  + writeline(): void
  + readTeacherFromTxtFile(String): List<Teacher>
}
class ConfigManager {
  + ConfigManager():
   assignedFilePath: String
   teacherFilePath: String
   requestFilePath: String
}
class Course {
  + Course(String, String):
  - courseName: String
  - requiredSkills: List<String>
  - courseId: String
  - assignedTeachers: List<Teacher>
  + assignTeacher(Teacher): void
  + addRequiredSkill(String): void
  + toString(): String
   requiredSkills: List<String>
   courseId: String
   courseName: String
   assignedTeachers: List<Teacher>
}
interface DataReader << interface >> {
   teacherFilePath: String
   requestFilePath: String
   teachingRequirements: List<TeachingRequirement>
   assignedFilePath: String
   teachers: List<Teacher>
   assignedRequirements: List<AssignedRequirement>
}
interface DataWriter << interface >> {
  + writeTeachers(List<Teacher>, String): void
  + writeTeachingRequirements(List<TeachingRequirement>, String): void
  + writeAssignedRequirements(List<AssignedRequirement>, String): void
}
class Database {
  + Database(DataReader, DataWriter):
  + Database():
  - dataWriter: DataWriter
  - dataReader: DataReader
   dataWriter: DataWriter
   dataReader: DataReader
}
class Search {
  + Search():
  + search(): void
  - searchByDirectorName(String, List<TeachingRequirement>, List<AssignedRequirement>): void
  - searchByTeacherId(int, List<Teacher>, List<AssignedRequirement>): void
}
class Teacher {
  + Teacher(String, int, List<String>, boolean, String):
  - name: String
  - id: int
  - skills: List<String>
  - train: String
  + checkAssign(): boolean
  + addSkill(String): void
  + setAssign(): void
  + toString(): String
  + checkSkill(String): boolean
   name: String
   train: String
   id: int
   skills: List<String>
}
class TeachingRequirement {
  + TeachingRequirement(String, String, String, String):
  + TeachingRequirement(String, String, int, String, String, String):
  - directorName: String
  - requestStatus: String
  - teachingTime: String
  - className: String
  - requestId: int
  - requirement: String
  + checkPending(): boolean
  + toString(): String
   directorName: String
   className: String
   requirement: String
   requestStatus: String
   requestId: int
   teachingTime: String
}
class TxtFileDataReader {
  + TxtFileDataReader():
  - assignedRequirements: List<AssignedRequirement>
  - teachingRequirements: List<TeachingRequirement>
  - teacher: List<Teacher>
  # readTeachingRequirementsFromFile(String): void
  # readAssignedRequirementsFromFile(String): void
  # readTeachersFromFile(String): void
   requestFilePath: String
   teachingRequirements: List<TeachingRequirement>
   teacher: List<Teacher>
   assignedRequirements: List<AssignedRequirement>
   teacherFilePath: String
   assignedFilePath: String
   teachers: List<Teacher>
}
class TxtFileDataWriter {
  + TxtFileDataWriter():
  + writeAssignedRequirements(List<AssignedRequirement>, String): void
  + writeTeachers(List<Teacher>, String): void
  + writeTeachingRequirements(List<TeachingRequirement>, String): void
}

AbstractDataReader   -[#008200,dashed]-^  DataReader
BasicCommands        -[#595959,dashed]->  Teacher             : "«create»"
ConfigManager        -[#595959,dashed]->  ConfigManager
Course              "1" *-[#595959,plain]-> "assignedTeachers\n*" Teacher
DataReader           -[#595959,dashed]->  AssignedRequirement
DataReader           -[#595959,dashed]->  Teacher
DataReader           -[#595959,dashed]->  TeachingRequirement
DataWriter           -[#595959,dashed]->  AssignedRequirement
DataWriter           -[#595959,dashed]->  Teacher
DataWriter           -[#595959,dashed]->  TeachingRequirement
Database            "1" *-[#595959,plain]-> "dataReader\n1" DataReader
Database            "1" *-[#595959,plain]-> "dataWriter\n1" DataWriter
Database             -[#595959,dashed]->  TxtFileDataReader   : "«create»"
Database             -[#595959,dashed]->  TxtFileDataWriter   : "«create»"
Search               -[#595959,dashed]->  AssignedRequirement
Search               -[#595959,dashed]->  DataReader
Search              "1" *-[#595959,plain]-> "database\n1" Database
Search               -[#595959,dashed]->  Database            : "«create»"
Search               -[#595959,dashed]->  Search
Search               -[#595959,dashed]->  Teacher
Search               -[#595959,dashed]->  TeachingRequirement
TxtFileDataReader    -[#000082,plain]-^  AbstractDataReader
TxtFileDataReader   "1" *-[#595959,plain]-> "assignedRequirements\n*" AssignedRequirement
TxtFileDataReader    -[#595959,dashed]->  AssignedRequirement : "«create»"
TxtFileDataReader    -[#595959,dashed]->  ConfigManager
TxtFileDataReader    -[#595959,dashed]->  Teacher             : "«create»"
TxtFileDataReader   "1" *-[#595959,plain]-> "teacher\n*" Teacher
TxtFileDataReader   "1" *-[#595959,plain]-> "teachingRequirements\n*" TeachingRequirement
TxtFileDataReader    -[#595959,dashed]->  TeachingRequirement : "«create»"
TxtFileDataReader    -[#595959,dashed]->  TxtFileDataReader
TxtFileDataWriter    -[#595959,dashed]->  AssignedRequirement
TxtFileDataWriter    -[#008200,dashed]-^  DataWriter
TxtFileDataWriter    -[#595959,dashed]->  Teacher
TxtFileDataWriter    -[#595959,dashed]->  TeachingRequirement
@enduml
